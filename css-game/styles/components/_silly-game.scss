$block-width: 400px;
$block-height: 300px;

$direction-width: 50em;
$direction-height: 50em;
$direction-gap-x: 10em;
$direction-gap-y: 10em;
$direction-offset-x: 225em;
$direction-offset-y: 5em;
$direction-alignment-x: left;
$direction-alignment-y: top;

$default-block-transition-duration: 1s;
//$default-block-transition-function: cubic-bezier(.2,0,.7,1);

$game-class: game;
$position-class: position;
$direction-class: direction;
$world-class: world;
$block-class: map-block;

$show-outside-blocks: false;

$required-key-count: 3;
$world: (
  (
    (
      name: '1-1',
      accessible: true,
    ),

    (
      name: '2-1',
      accessible: true,
    ),

    (
      name: '3-1',
      accessible: true,
    ),
  ),

  (
    (
      name: '1-2',
      accessible: true,
      // Order is important
      // requires: (
      //   key-1,
      //   key-2,
      //   key-3,
      // ),
      requires: trap-door,
    ),

    (
      accessible: false,
    ),

    (
      name: '3-2',
      accessible: true,
    ),
  ),
);

%direction-up {
  &::before {
    content: "\f077"; // fa-chevron-up
  }
}
%direction-down {
  &::before {
    content: "\f078"; // fa-chevron-down
  }
}
%direction-left {
  &::before {
    content: "\f053"; // fa-chevron-left
  }
}
%direction-right {
  &::before {
    content: "\f054"; // fa-chevron-right
  }
}

@include build-game;
.game {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

%fa {
  display: inline-block;
  font: normal normal normal 14px/1 FontAwesome;
  font-size: inherit;
  text-rendering: auto;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
.direction {
  @extend %fa;
  line-height: $direction-height;
  text-align: center;
  border-radius: 10em;
  background: #675542;
  color: #937d45;
  text-shadow: 0 2em #4d3c31;
  box-shadow: 0 1em 0 2em #4d3c31;

  &::before {
    font-size: 20em;
  }
}

.prop {
  position: absolute;
  background: transparent no-repeat 50% 50% / contain;
  transition:
    transform ($default-block-transition-duration / 2) ($default-block-transition-duration / 2) ease-in,
    opacity ($default-block-transition-duration / 2) ($default-block-transition-duration / 2) ease-in;

  &--character {
    @include align(145, 140, 40, 100);
    background-image: url('../i/character.png');
    transition-delay: $default-block-transition-duration;
  }
  &--green-lock {
    @include align(237, 249, 32, 34);
    background-image: url('../i/green-lock.png');
  }
  &--blue-lock {
    @include align(209, 226, 28, 27);
    background-image: url('../i/blue-lock.png');
  }
  &--red-lock {
    @include align(114, 230, 26, 30);
    background-image: url('../i/red-lock.png');
  }

  @each $key-name, $key-index in (red:1, green:2, blue:3) {
    @include if-got('key-' + $key-index) {
      &--#{$key-name}-lock {
        transform: translateY(-40em);
        opacity: 0;
      }
    }
  }
}

.value-getter {
  position: absolute;
  cursor: pointer;
  background: transparent no-repeat 50% 50% / contain;

  &--key {
    @include size(80, 53);
    background-image: url('../i/key.png');
    background-size: cover;
    transition:
      transform ($default-block-transition-duration / 2) cubic-bezier(.4,.0,.6,-0.6),
      opacity ($default-block-transition-duration / 2) cubic-bezier(.4,.0,.6,-0.6);

    &-1 {
      @include pos(110, 180);
    }

    &-2 {
      @include pos(250, 240);
    }

    &-3 {
      @include pos(34, 27);
    }

    @for $i from 1 through 3 {
      &-#{$i} {
        @include if-got(key-#{$i}) {
          transform: scale(0.5);
          opacity: 0;
          pointer-events: none;
        }
      }
    }
  }


  &--trap-door {
    @include align(105, 242, 161, 84.5);
    background-image: url('../i/trap-door.png');
    transition-delay: 0;
    pointer-events: none;
    transform-origin: 50% 60em;
    transition:
      transform $default-block-transition-duration cubic-bezier(.4,.0,.6,-0.6),
      opacity 0s $default-block-transition-duration;
  }

  @include if-got-type(key, 3) {
    &--trap-door {
      pointer-events: auto;
    }
  }

  @include if-got(trap-door) {
    &--trap-door {
      transform: rotateX(113deg);
      opacity: 0;
    }
  }
}

[id^="value--"] {
  display: none;
}

.map-block {
  background-size: cover;
  perspective: 1000px;

  &--1-1 {
    background-image: url('../i/ladder-down-room.jpg');
  }
  &--2-1 {
    background-image: url('../i/empty-room.jpg');
  }
  &--3-1 {
    background-image: url('../i/ladder-down-room.jpg');
  }

  &--1-2 {
    background-image: url('../i/ladder-up-room.jpg');
  }
  &--3-2 {
    background-image: url('../i/key-room.jpg');
  }
}
